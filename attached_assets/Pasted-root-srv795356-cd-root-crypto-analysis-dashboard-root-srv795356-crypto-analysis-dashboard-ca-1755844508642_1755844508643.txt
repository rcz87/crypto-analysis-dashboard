root@srv795356:~# cd /root/crypto-analysis-dashboard
root@srv795356:~/crypto-analysis-dashboard# cat > /tmp/debug.sh << 'EOF'
#!/bin/bash
echo "🔍 ADDING DB TARGET DEBUG"

# Add debug code to routes.py
python3 << 'PYTHON'
with open('/root/crypto-analysis-dashboard/routes.py', 'r') as f:
    lines = f.readlines()

new_lines = []
for i, line in enumerate(lines):
    new_lines.append(line)
    if 'database_url = current_app.config.get("SQLALCHEMY_DATABASE_URI")' in line:
        new_lines.append('        from sqlalchemy.engine import make_url\n')
        new_lines.append('        # DEBUG: identify database target\n')
        new_lines.append('        try:\n')
        new_lines.append('            parsed = make_url(database_url)\n')
        new_lines.append('            db_target = {\n')
        new_lines.append('                "drivername": parsed.drivername,\n')
        new_lines.append('                "host": parsed.host,\n')
        new_lines.append('                "port": parsed.port,\n')
        new_lines.append('                "database": parsed.database\n')
        new_lines.append('            }\n')
        new_lines.append('            components["db_target"] = db_target\n')
        new_lines.append('            logger.info(f"[HEALTH] DB target: {db_target}")\n')
        new_lines.append('        except: pass\n')

with open('/root/crypto-analysis-dashboard/routes.py', 'w') as f:
    f.writelines(new_lines)
print("✅ Debug added")
PYTHON

systemctl restart cryptoapi
sleep 3

echo ""
echo "=== HEALTH CHECK WITH DEBUG ==="
curl -s http://127.0.0.1:5050/health | jq

echo ""
echo "=== CHECK LOGS ==="
journalctl -u cryptoapi -n 20 | grep -i "DB target"
EOF

bash /tmp/debug.sh
🔍 ADDING DB TARGET DEBUG
✅ Debug added

=== HEALTH CHECK WITH DEBUG ===
{
  "components": {
    "database": {
      "message": "Connection failed: (psycopg2.OperationalError) connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  pas",
      "status": "unhealthy"
    },
    "okx_api": {
      "message": "OKX API connection successful",
      "status": "healthy"
    }
  },
  "status": "unhealthy",
  "timestamp": "2025-08-22T06:34:30.209899",
  "uptime": "N/A",
  "version": "2.0.0"
}

=== CHECK LOGS ===
root@srv795356:~/crypto-analysis-dashboard# 