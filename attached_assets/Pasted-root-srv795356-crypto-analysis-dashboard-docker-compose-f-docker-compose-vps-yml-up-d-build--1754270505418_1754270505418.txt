root@srv795356:~/crypto-analysis-dashboard# docker-compose -f docker-compose-vps.yml up -d --build
Building crypto-app
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  4.675MB
Step 1/25 : FROM python:3.11-slim as builder
 ---> f3bfd8e9386c
Step 2/25 : WORKDIR /build
 ---> Using cache
 ---> 566efa1b24f7
Step 3/25 : COPY requirements-prod.txt .
 ---> Using cache
 ---> df5b72d73469
Step 4/25 : RUN pip install --no-cache-dir --user -r requirements-prod.txt     && find /root/.local -name "*.pyc" -delete     && find /root/.local -name "__pycache__" -type d -exec rm -rf {} + || true     && find /root/.local -name "*.dist-info" -type d -exec rm -rf {} + || true     && find /root/.local -name "tests" -type d -exec rm -rf {} + || true
 ---> Using cache
 ---> 588da1d1e4d2
Step 5/25 : FROM python:3.11-slim
 ---> f3bfd8e9386c
Step 6/25 : ENV PYTHONDONTWRITEBYTECODE=1
 ---> Using cache
 ---> 53c3506ebc22
Step 7/25 : ENV PYTHONUNBUFFERED=1
 ---> Using cache
 ---> 8c74d327651b
Step 8/25 : ENV FLASK_ENV=production
 ---> Using cache
 ---> 1407c7656de9
Step 9/25 : ENV PRODUCTION_ONLY=1
 ---> Using cache
 ---> 8329c89ed846
Step 10/25 : RUN apt-get update && apt-get install -y --no-install-recommends     postgresql-client     curl     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && rm -rf /var/cache/apt/*     && rm -rf /tmp/*     && rm -rf /var/tmp/*
 ---> Using cache
 ---> fe3fd4e73754
Step 11/25 : COPY --from=builder /root/.local /usr/local
 ---> Using cache
 ---> 021b16feb563
Step 12/25 : WORKDIR /app
 ---> Using cache
 ---> 255e90725f31
Step 13/25 : COPY wsgi_production.py .
 ---> Using cache
 ---> 49f99d5e624c
Step 14/25 : COPY main.py .
 ---> Using cache
 ---> a3ff3bc98125
Step 15/25 : COPY gpts_api_simple.py .
 ---> Using cache
 ---> bc000116d518
Step 16/25 : COPY gunicorn.conf.py .
 ---> Using cache
 ---> 3d9a827a2b06
Step 17/25 : COPY start-production.sh .
 ---> Using cache
 ---> f0fc71a22fa3
Step 18/25 : COPY core/ ./core/
 ---> Using cache
 ---> 5f589700a943
Step 19/25 : RUN echo "=== Verifying .dockerignore exclusions ==="     && echo "Checking if heavy directories were excluded..."     && test ! -d ".pythonlibs" || (echo "ERROR: .pythonlibs was copied!" && exit 1)     && test ! -d ".cache" || (echo "ERROR: .cache was copied!" && exit 1)     && test ! -d ".local" || (echo "ERROR: .local was copied!" && exit 1)     && echo "âœ… Heavy directories successfully excluded"
 ---> Using cache
 ---> 97d36457bf0b
Step 20/25 : RUN mkdir -p logs tmp     && find . -name "*.pyc" -delete     && find . -name "__pycache__" -type d -exec rm -rf {} + || true     && find /usr/local -name "*.pyc" -delete     && find /usr/local -name "__pycache__" -type d -exec rm -rf {} + || true     && find /usr/local -name "tests" -type d -exec rm -rf {} + || true     && find /usr/local -name "test" -type d -exec rm -rf {} + || true     && find /usr/local -name "*.dist-info" -type d -exec rm -rf {} + || true     && rm -rf /usr/local/lib/python*/site-packages/pip     && rm -rf /usr/local/lib/python*/site-packages/setuptools     && rm -rf /tmp/* /var/tmp/* /root/.cache
 ---> Using cache
 ---> 859699cdb2fd
Step 21/25 : RUN useradd --create-home --shell /bin/bash app && chown -R app:app /app
 ---> Using cache
 ---> 7896c72d912a
Step 22/25 : USER app
 ---> Using cache
 ---> a54f35ace3ad
Step 23/25 : EXPOSE 5000
 ---> Using cache
 ---> 9f1ab79b9c2c
Step 24/25 : HEALTHCHECK --interval=60s --timeout=15s --start-period=120s --retries=2   CMD curl -f http://localhost:5000/health || exit 1
 ---> Using cache
 ---> c5e3be092059
Step 25/25 : CMD ["./start-production.sh"]
 ---> Using cache
 ---> aef6987658a5
Successfully built aef6987658a5
Successfully tagged crypto-analysis-dashboard_crypto-app:latest
crypto_postgres is up-to-date
Recreating crypto_trading_app ... 

ERROR: for crypto_trading_app  'ContainerConfig'

ERROR: for crypto-app  'ContainerConfig'
Traceback (most recent call last):
  File "/usr/bin/docker-compose", line 33, in <module>
    sys.exit(load_entry_point('docker-compose==1.29.2', 'console_scripts', 'docker-compose')())
  File "/usr/lib/python3/dist-packages/compose/cli/main.py", line 81, in main
    command_func()
  File "/usr/lib/python3/dist-packages/compose/cli/main.py", line 203, in perform_command
    handler(command, command_options)
  File "/usr/lib/python3/dist-packages/compose/metrics/decorator.py", line 18, in wrapper
    result = fn(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/compose/cli/main.py", line 1186, in up
    to_attach = up(False)
  File "/usr/lib/python3/dist-packages/compose/cli/main.py", line 1166, in up
    return self.project.up(
  File "/usr/lib/python3/dist-packages/compose/project.py", line 697, in up
    results, errors = parallel.parallel_execute(
  File "/usr/lib/python3/dist-packages/compose/parallel.py", line 108, in parallel_execute
    raise error_to_reraise
  File "/usr/lib/python3/dist-packages/compose/parallel.py", line 206, in producer
    result = func(obj)
  File "/usr/lib/python3/dist-packages/compose/project.py", line 679, in do
    return service.execute_convergence_plan(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 579, in execute_convergence_plan
    return self._execute_convergence_recreate(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 499, in _execute_convergence_recreate
    containers, errors = parallel_execute(
  File "/usr/lib/python3/dist-packages/compose/parallel.py", line 108, in parallel_execute
    raise error_to_reraise
  File "/usr/lib/python3/dist-packages/compose/parallel.py", line 206, in producer
    result = func(obj)
  File "/usr/lib/python3/dist-packages/compose/service.py", line 494, in recreate
    return self.recreate_container(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 612, in recreate_container
    new_container = self.create_container(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 330, in create_container
    container_options = self._get_container_create_options(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 921, in _get_container_create_options
    container_options, override_options = self._build_container_volume_options(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 960, in _build_container_volume_options
    binds, affinity = merge_volume_bindings(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 1548, in merge_volume_bindings
    old_volumes, old_mounts = get_container_data_volumes(
  File "/usr/lib/python3/dist-packages/compose/service.py", line 1579, in get_container_data_volumes
    container.image_config['ContainerConfig'].get('Volumes') or {}
KeyError: 'ContainerConfig'
root@srv795356:~/crypto-analysis-dashboard# 