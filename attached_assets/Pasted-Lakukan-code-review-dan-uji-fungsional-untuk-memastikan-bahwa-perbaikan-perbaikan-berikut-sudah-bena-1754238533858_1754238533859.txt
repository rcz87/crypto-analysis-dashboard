Lakukan code review dan uji fungsional untuk memastikan bahwa perbaikan-perbaikan berikut sudah benar-benar diterapkan dan berjalan dengan baik dalam sistem crypto-analysis-dashboard. Fokus pada efisiensi kode, keandalan sinyal, validasi input, keamanan AI, dan ketahanan sistem.

🔍 Checklist yang harus diperiksa agen:
	1.	✅ Explainable AI (XAI) – Apakah modul AI menjelaskan alasan di balik sinyal? Cek apakah SHAP/LIME atau penjelasan model tersedia atau ada struktur ai_reasoning di endpoint /sinyal/tajam.
	2.	✅ Validasi Input & Data – Apakah semua input (symbol, tf, confidence) tervalidasi dengan Pydantic/Validator? Endpoint /api/gpts/signal harus menolak input yang salah dengan kode 422.
	3.	✅ Anti Prompt Injection – Pastikan telegram_notifier, ai_engine, atau endpoint LLM sudah menggunakan pemisahan sistem & input user (misal: prompt template yang dibatasi).
	4.	✅ Backtesting/Performance – Apakah /performance/stats sudah menghitung Sharpe Ratio / Max Drawdown / Win Rate dengan benar? Cek kalkulasi historis dan keakuratan hasil.
	5.	✅ Anomali Detection – Cek apakah ada fungsi untuk funding_rate spike, OI spike, atau imbalance alert di modul sharp_signal_engine atau alert_manager.
	6.	✅ Self-Improvement – Apakah endpoint signal-history, track-signal, atau analytics sudah menyimpan dan mengevaluasi sinyal yang lalu?
	7.	✅ Health Check – Endpoint /health dan /api/gpts/health harus bisa jalan, status sistem harus "healthy".
	8.	✅ Latency & Scalability – Evaluasi startup time, response time untuk endpoint utama (signal, chart, risk). Beri catatan jika ada bottleneck (terutama Redis, database, atau OKX fetcher).
	9.	✅ Keamanan & Logging – Pastikan error handler (error_handlers.py) menangkap semua error, tidak bocor ke client, dan logging bekerja (log/error/signal logs tersimpan).
	10.	✅ Modularitas Endpoint – Pastikan semua endpoint tidak saling merusak (namespace terpisah), dan Blueprint di gpts_api_simple.py tidak mengganggu modul lain.

🎯 Output yang diharapkan:
Laporan verifikasi teknis (bisa dalam format checklist JSON, Markdown, atau log hasil audit) yang menunjukkan:
	•	Mana yang SUDAH berfungsi ✅
	•	Mana yang PERLU diperbaiki ⚠️
	•	Rekomendasi lanjutan untuk setiap bagian (jika perlu)
