root@srv795356:~/crypto-analysis-dashboard# cat > /tmp/fix_env.sh << 'EOF'
#!/bin/bash
echo "🔍 CHECKING & FIXING DATABASE ENVIRONMENT"

# 1. Check current environment in systemd
echo "1. Current systemd environment:"
systemctl show cryptoapi.service | grep -E "DATABASE|SQLALCHEMY" | head -5

# 2. Check if .env file is overriding
echo ""
echo "2. Checking .env file:"
if [ -f /root/crypto-analysis-dashboard/.env ]; then
    echo "Found .env file. Database entries:"
    grep -E "DATABASE_URL|SQLALCHEMY" /root/crypto-analysis-dashboard/.env | sed 's/password=[^@]*/password=***/'
    
    # Backup and fix .env
    cp /root/crypto-analysis-dashboard/.env /root/crypto-analysis-dashboard/.env.bak
    
    # Remove localhost entries and add Neon
    grep -v -E "DATABASE_URL|SQLALCHEMY" /root/crypto-analysis-dashboard/.env > /tmp/.env.tmp
    echo "DATABASE_URL=postgresql://crypto_new_owner:WgOOUP9V5X9p@ep-gentle-boat-a10aawfh.ap-southeast-1.aws.neon.tech/crypto_dashboard_new?sslmode=require" >> /tmp/.env.tmp
    echo "SQLALCHEMY_DATABASE_URI=postgresql://crypto_new_owner:WgOOUP9V5X9p@ep-gentle-boat-a10aawfh.ap-southeast-1.aws.neon.tech/crypto_dashboard_new?sslmode=require" >> /tmp/.env.tmp
    mv /tmp/.env.tmp /root/crypto-analysis-dashboard/.env
    
    echo "✅ Fixed .env file to use Neon database"
fi

# 3. Update systemd service
echo ""
echo "3. Updating systemd service..."
cat > /etc/systemd/system/cryptoapi.service << 'SVC'
[Unit]
Description=Crypto Analysis Dashboard API
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/root/crypto-analysis-dashboard
Environment="DATABASE_URL=postgresql://crypto_new_owner:WgOOUP9V5X9p@ep-gentle-boat-a10aawfh.ap-southeast-1.aws.neon.tech/crypto_dashboard_new?sslmode=require"
Environment="SQLALCHEMY_DATABASE_URI=postgresql://crypto_new_owner:WgOOUP9V5X9p@ep-gentle-boat-a10aawfh.ap-southeast-1.aws.neon.tech/crypto_dashboard_new?sslmode=require"
ExecStart=/usr/bin/python3 -m gunicorn --bind 0.0.0.0:5050 --workers 4 --timeout 120 main:app
Restart=always

[Install]
WantedBy=multi-user.target
SVC

systemctl daemon-reload
systemctl restart cryptoapi

echo "✅ Service updated and restarted"

# 4. Wait and test
sleep 5
bash /tmp/fix_env.shapi -n 10 | grep -E "Database|Neon|localhost"
🔍 CHECKING & FIXING DATABASE ENVIRONMENT
1. Current systemd environment:
Environment=PATH=/root/crypto-analysis-dashboard/.venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin PGHOST= PGPORT= PGUSER= PGPASSWORD= "DATABASE_URL=postgresql://neondb_owner:YOUR_ACTUAL_NEON_PASSWORD@ep-billowing-sunset-xxxx.us-east-2.aws.neon.tech/neondb?sslmode=require" "SQLALCHEMY_DATABASE_URI=postgresql://neondb_owner:YOUR_ACTUAL_NEON_PASSWORD@ep-billowing-sunset-xxxx.us-east-2.aws.neon.tech/neondb?sslmode=require"

2. Checking .env file:
Found .env file. Database entries:
DATABASE_URL=postgresql://trading_user:your_password@localhost:5432/trading_db
✅ Fixed .env file to use Neon database

3. Updating systemd service...
✅ Service updated and restarted

4. Testing health endpoint:
{
  "components": {
    "database": {
      "message": "Connection failed: (psycopg2.OperationalError) connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  pas",
      "status": "unhealthy"
    },
    "okx_api": {
      "message": "OKX API connection successful",
      "status": "healthy"
    }
  },
  "status": "unhealthy",
  "timestamp": "2025-08-22T06:37:14.382771",
  "uptime": "N/A",
  "version": "2.0.0"
}

5. Checking service logs:
Aug 22 06:37:09 srv795356 gunicorn[254984]: ERROR:app:❌ Database initialization failed: (psycopg2.OperationalError) connection to server at "localhost" (::1), port 5432 failed: FATAL:  password authentication failed for user "trading_user"
Aug 22 06:37:09 srv795356 gunicorn[254985]: ERROR:app:❌ Database initialization failed: (psycopg2.OperationalError) connection to server at "localhost" (::1), port 5432 failed: FATAL:  password authentication failed for user "trading_user"
root@srv795356:~/crypto-analysis-dashboard# 